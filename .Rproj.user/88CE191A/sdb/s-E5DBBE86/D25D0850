{
    "collab_server" : "",
    "contents" : "// MIT License\n// Copyright (c) 2019 Vincent Runge\n\n#include \"ListPoint.h\"\n#include<iostream>\n\n#include \"math.h\"\n\n//####### constructor #######////####### constructor #######////####### constructor #######//\n//####### constructor #######////####### constructor #######////####### constructor #######//\n\nListPoint::ListPoint()\n{\n  firstPoint = new Point(0,0);\n  currentPosition = firstPoint;\n  //the first Point = an empty point : we consider point->nxt in functions\n}\n\n\n//####### accessor #######////####### accessor #######////####### accessor #######//\n//####### accessor #######////####### accessor #######////####### accessor #######//\n\nunsigned int ListPoint::getState()\n  {return(currentPosition -> nxt -> state);}\n\n\nunsigned int ListPoint::getTime()\n  {return(currentPosition -> nxt -> time);}\n\n//####### initializeCurrentPosition #######////####### initializeCurrentPosition #######////####### initializeCurrentPosition #######//\n//####### initializeCurrentPosition #######////####### initializeCurrentPosition #######////####### initializeCurrentPosition #######//\n\nvoid ListPoint::initializeCurrentPosition()\n  {currentPosition = firstPoint;}\n\n//####### addPoint #######////####### addPoint #######////####### addPoint #######//\n//####### addPoint #######////####### addPoint #######////####### addPoint #######//\n\nvoid ListPoint::addPoint(Point* P)\n{\n  P -> nxt = firstPoint -> nxt;\n  firstPoint -> nxt = P;\n}\n\n\n//####### deleteNxtPoint #######////####### deleteNxtPoint #######////####### deleteNxtPoint #######//\n//####### deleteNxtPoint #######////####### deleteNxtPoint #######////####### deleteNxtPoint #######//\n\nvoid ListPoint::deleteNxtPoint()\n{\n  Point* pointToDelete = currentPosition -> nxt;\n  currentPosition -> nxt = currentPosition -> nxt -> nxt;\n  delete(pointToDelete);\n}\n\n\n//####### move #######////####### move #######////####### move #######//\n//####### move #######////####### move #######////####### move #######//\n\nbool ListPoint::move()\n{\n  bool res = true;\n  if(currentPosition -> nxt -> nxt != NULL){currentPosition = currentPosition -> nxt;}\n    else{res = false;}\n\n  return(res);\n}\n\n\n//####### show #######////####### show #######////####### show #######//\n//####### show #######////####### show #######////####### show #######//\n\nvoid ListPoint::show()\n{\n  std::cout << \"State \" << getState() << \"  Time \" << getTime() << std::endl;\n   while(move() == true){std::cout << \"State \" << getState() << \"  Time \" << getTime() << std::endl;}\n}\n\n\n\n\n",
    "created" : 1561452152822.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1602044303",
    "id" : "D25D0850",
    "lastKnownWriteTime" : 1561466482,
    "last_content_update" : 1561466482292,
    "path" : "C:/slopeOP/src/ListPoint.cpp",
    "project_path" : "src/ListPoint.cpp",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "cpp"
}