n <- 22001
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n) + Collatz(n)
plotCollatz(v)
n <- 2201
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n) + Collatz(n)
plotCollatz(v)
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n) + Collatz(n)
plotCollatz(v)
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n) + Collatz(n)
plotCollatz(v)
n <- 2201
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
n <- 2202
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
n <- 512
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
n <- 513
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
Collatz2 <- function(start = 10)
{
vec <- start
temp <- start
while(temp != 1)
{
if(temp%%2 == 0)
{
vec <- c(vec, temp/2)
temp <- temp/2
}
else
{
vec <- c(vec, 3*temp-1)
temp <- 3*temp-1
}
}
return(vec)
}
n <- 513
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
n <- 51
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
n <- 5
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
Collatz2 <- function(start = 10, stop = 10^6)
{
it <- 0
vec <- start
temp <- start
while(temp != 1 || it < stop)
{
if(temp%%2 == 0)
{
vec <- c(vec, temp/2)
temp <- temp/2
}
else
{
vec <- c(vec, 3*temp-1)
temp <- 3*temp-1
}
it = it + 1
}
return(vec)
}
n <- 5
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
Collatz2 <- function(start = 10, stop = 10^6)
{
it <- 0
vec <- start
temp <- start
while(temp != 1 && it < stop)
{
if(temp%%2 == 0)
{
vec <- c(vec, temp/2)
temp <- temp/2
}
else
{
vec <- c(vec, 3*temp-1)
temp <- 3*temp-1
}
it = it + 1
}
return(vec)
}
n <- 5
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
Collatz2 <- function(start = 10, stop = 10^3)
{
it <- 0
vec <- start
temp <- start
while(temp != 1 && it < stop)
{
if(temp%%2 == 0)
{
vec <- c(vec, temp/2)
temp <- temp/2
}
else
{
vec <- c(vec, 3*temp-1)
temp <- 3*temp-1
}
it = it + 1
}
return(vec)
}
n <- 5
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
v
Collatz2 <- function(start = 10, stop = 10^3)
{
it <- 0
vec <- start
temp <- start
while(temp != 5 && it < stop)
{
if(temp%%2 == 0)
{
vec <- c(vec, temp/2)
temp <- temp/2
}
else
{
vec <- c(vec, 3*temp-1)
temp <- 3*temp-1
}
it = it + 1
}
return(vec)
}
n <- 5
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
n <- 50
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
n <- 50
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
v
n <- 12
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
v
n <- 111
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
v
n <- 1111
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
v
n <- 11111
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
v
n <- 33
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
v
n <- 32
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
v
n <- 31
v <- Collatz(n)
plotCollatz(v)
v <- Collatz2(n)
plotCollatz(v)
v
Collatz3 <- function(start = 10, stop = 10^3)
{
it <- 0
vec <- start
temp <- start
while(temp != 5 && it < stop)
{
if(temp%%2 == 0)
{
vec <- c(vec, temp/2)
temp <- temp/2
}
else
{
vec <- c(vec, 3*temp+3)
temp <- 3*temp+3
}
it = it + 1
}
return(vec)
}
n <- 31
v <- Collatz(n)
plotCollatz(v)
v <- Collatz3(n)
plotCollatz(v)
v
n <- 30
v <- Collatz(n)
plotCollatz(v)
v <- Collatz3(n)
plotCollatz(v)
v
n <- 95
v <- Collatz(n)
plotCollatz(v)
v <- Collatz3(n)
plotCollatz(v)
v
Collatz3 <- function(start = 10, stop = 10^3)
{
it <- 0
vec <- start
temp <- start
while(temp != 3 && it < stop)
{
if(temp%%2 == 0)
{
vec <- c(vec, temp/2)
temp <- temp/2
}
else
{
vec <- c(vec, 3*temp+3)
temp <- 3*temp+3
}
it = it + 1
}
return(vec)
}
n <- 95
v <- Collatz(n)
plotCollatz(v)
v <- Collatz3(n)
plotCollatz(v)
v
n <- 95
v <- Collatz(n)
plotCollatz(v)
v <- Collatz3(n)
plotCollatz(v)
v
n <- 91
v <- Collatz(n)
plotCollatz(v)
v <- Collatz3(n)
plotCollatz(v)
v
n <- 90
v <- Collatz(n)
plotCollatz(v)
v <- Collatz3(n)
plotCollatz(v)
v
n <- 111
v <- Collatz(n)
plotCollatz(v)
v <- Collatz3(n)
plotCollatz(v)
v
n <- 155
v <- Collatz(n)
plotCollatz(v)
v <- Collatz3(n)
plotCollatz(v)
v
CollatzLength3 <- function(numberMin = 5, numberMax = 10)
{
res <- NULL
for(i in numberMin:numberMax)
{
res <- c(res, length(Collatz3(i)))
}
return(res)
}
w <- CollatzLength(1,1000)
plot(w, type = "p", lty = 1, pch = 20)
w <- CollatzLength3(1,1000)
plot(w, type = "p", lty = 1, pch = 20)
w <- CollatzLength(1,10000)
plot(w, type = "p", lty = 1, pch = 20)
w <- CollatzLength3(1,10000)
plot(w, type = "p", lty = 1, pch = 20)
w <- CollatzLength(10000,20000)
plot(w, type = "p", lty = 1, pch = 20)
w <- CollatzLength3(10000,20000)
plot(w, type = "p", lty = 1, pch = 20)
w1 <- CollatzLength(10000,20000)
plot(w1, type = "p", lty = 1, pch = 20)
w2 <- CollatzLength3(10000,20000)
plot(w2, type = "p", lty = 1, pch = 20)
plot(w1+w2, type = "p", lty = 1, pch = 20)
plot(w1-w2, type = "p", lty = 1, pch = 20)
Collatz5 <- function(start = 10, stop = 10^3)
{
it <- 0
vec <- start
temp <- start
while(temp != 3 && it < stop)
{
if(temp%%2 == 0)
{
vec <- c(vec, temp/2)
temp <- temp/2
}
else
{
vec <- c(vec, 3*temp+5)
temp <- 3*temp+5
}
it = it + 1
}
return(vec)
}
n <- 155
v <- Collatz(n)
plotCollatz(v)
v <- Collatz5(n)
plotCollatz(v)
v
n <- 15
v <- Collatz(n)
plotCollatz(v)
v <- Collatz5(n)
plotCollatz(v)
v
Collatz5 <- function(start = 10, stop = 10^3)
{
it <- 0
vec <- start
temp <- start
while(temp != 5 && it < stop)
{
if(temp%%2 == 0)
{
vec <- c(vec, temp/2)
temp <- temp/2
}
else
{
vec <- c(vec, 3*temp+5)
temp <- 3*temp+5
}
it = it + 1
}
return(vec)
}
n <- 15
v <- Collatz(n)
plotCollatz(v)
v <- Collatz5(n)
plotCollatz(v)
v
n <- 15
v <- Collatz(n)
plotCollatz(v)
v <- Collatz5(n)
plotCollatz(v)
v
n <- 151
v <- Collatz(n)
plotCollatz(v)
v <- Collatz5(n)
plotCollatz(v)
v
n <- 112
v <- Collatz(n)
plotCollatz(v)
v <- Collatz5(n)
plotCollatz(v)
v
n <- 11
v <- Collatz(n)
plotCollatz(v)
v <- Collatz5(n)
plotCollatz(v)
v
n <- 71
v <- Collatz(n)
plotCollatz(v)
v <- Collatz5(n)
plotCollatz(v)
v
CollatzLength3 <- function(numberMin = 5, numberMax = 10)
{
res <- NULL
for(i in numberMin:numberMax)
{
res <- c(res, length(Collatz3(i)))
}
return(res)
}
w1 <- CollatzLength(10000,20000)
plot(w1, type = "p", lty = 1, pch = 20)
w2 <- CollatzLength3(10000,20000)
plot(w2, type = "p", lty = 1, pch = 20)
devtools::install_github("vrunge/listChallenge")
listChallenge(length = 10^4, batch = 10^3, prob = 0.1, method = "std")
library(listChallenge)
listChallenge(length = 10^4, batch = 10^3, prob = 0.1, method = "std")
?listChallenge
listChallenge(length = 10^4, batch = 10^3, prob = 0.1, method = "doublylinkedlist")
l1 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "std")
l2 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "mylist")
l3 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "mylist2")
l4 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "doublylinkedlist")
l5 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "doublylinkedlist2")
l1$time
l2$time
l3$time
l4$time
l5$time
l1 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "std")
l2 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "mylist")
l3 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "mylist2")
l4 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "doublylinkedlist")
l5 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "doublylinkedlist2")
l1$time
l2$time
l3$time
l4$time
l5$time
l1 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "std")
l2 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "mylist")
l3 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "mylist2")
l4 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "doublylinkedlist")
l5 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "doublylinkedlist2")
l1$time
l2$time
l3$time
l4$time
l5$time
devtools::install_github("vrunge/listChallenge")
devtools::install_github("vrunge/listChallenge", force = TRUE)
devtools::install_github("vrunge/listChallenge", force = TRUE)
l1 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "std")
l2 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "mylist")
l3 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "mylist2")
l4 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "doublylinkedlist")
l5 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "doublylinkedlist2")
l1$time
l2$time
l3$time
l4$time
l5$time
l1 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "std")
l2 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "vr1")
l3 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "vr2")
l4 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "al1")
l5 <- listChallenge(length = 10^7, batch = 10^4, prob = 0.1, method = "al2")
l1$time
l2$time
l3$time
l4$time
l5$time
l2
library(slopeOP)
